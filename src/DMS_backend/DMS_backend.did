type Principal = blob;

type AppointmentDetails = record {
  department: text;
  doctor: text;
  date: text;
  time: text;
};
type Appointments = record {Principal; vec AppointmentDetails};

type ProviderRequest = record {
  provider_id: text;
  provider_name: text;
  request_status: nat8;
};
type ProviderRequests = record {text; ProviderRequest};

type HealthData = record {
    height: text;
    weight: text;
    blood_type: text;
    allergies: vec text;
    diseases: vec text;
    medications: vec text;
};
type PersonalData = record {
    name: text;
    surname: text;
    birthday: text;
    country: text;
    city: text;
    province: text;
    mail: text;
    phone: text;
};

type User = record {
  identity: text;
  appointments: Appointments;
  health_data: HealthData;
  personal_data: PersonalData;
  provider_requests: ProviderRequests;
  user_type: nat8;
};

type Department = record {
  department_name: text;
  doctors: vec record {text; Doctor};
};

type Provider = record {
  provider_name: text;
  provider_location: text;
  departments: vec record {text; Department};
};

type Doctor = record {
  doctor_name: text;
  doctor_department: text;
  dates: vec record {text; vec text};
};

type Session = record {
  user_id: text;
};

type Medication = record { 
  prescription_date: text;
  barcode: text; 
  prescription_number: text; 
  medicine_name: text;
  dosage: text; 
  period: text; 
  usage_method: text;
  usage_count: text;
  box_count: text; 
  provider_name: text; 
  doctor_name: text; 
  box_image: vec nat8;
  prospectus_pdf: vec nat8;
};



service : {

// user man
  create_user: (identity: text) -> (variant {Ok: null; Err: text});
  get_current_user : (identity: text) -> (opt text);
  list_active_sessions: () -> (vec text);

// doctor man
  add_doctor: (provider_id: text, doctor_id: text, new_doctor_name: text, new_doctor_department: text) -> (variant {Ok: null; Err: text});
  list_doctors: (provider_id: text) -> (vec Doctor);
// department man
  add_department : (provider_id: text, new_department_name: text) -> (variant {Ok: null; Err: text});
  list_departments : (provider_id: text) -> (vec Department);


// medications man
  add_medication : (user_id: text, prescription_date: text, barcode: text, prescription_number: text, medicine_name: text, dosage: text, period: text, usage_method: text, usage_count: text, box_count: text, provider_name: text, doctor_name: text, box_image: vec nat8, prospectus_pdf: vec nat8) -> (variant {Ok: null; Err: text});
  list_medications : (user_id: text) -> (variant {Ok: vec Medication; Err: text});

  create_provider_request : (user_id: text, provider_name: text) -> (variant {Ok: null; Err: text});
  list_provider_requests : () -> (vec ProviderRequest);
  update_provider_request : (user_id: text, new_request_status: nat8) -> (variant {Ok: null; Err: text});
  list_providers: () -> (vec Provider);

};